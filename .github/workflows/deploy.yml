name: Deploy

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      deploy-branch:
        type: string
        description: Branch name for deploy to Prod
        default: main
        required: true

jobs:
  deploy:
	  if: false # –≠—Ç–∞ —Å—Ç—Ä–æ–∫–∞ –∑–∞–ø—Ä–µ—â–∞–µ—Ç –∞–≤—Ç–æ–¥–µ–ø–ª–æ–π. –£–¥–∞–ª–∏—Ç–µ, —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å —ç—Ç–æ—Ç —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª
    runs-on: ubuntu-latest
    env:
      SSH_USER: drake48
      SSH_HOST: drake48.beget.tech
      REMOTE_THEME_PATH: /home/d/drake48/thunder-web.ru/public_html/project/wp-content/themes/wp-theme-project #  –ü—É—Ç—å –∫ –ø–∞–ø–∫–µ –≤—ã–≥—Ä—É–∑–∫–∏
      REMOTE_SITE_URL: project.dev.thunder-web.ru  # –ë–µ–∑ –ø—Ä–æ—Ç–æ–∫–æ–ª–∞, –Ω–∞ —ç—Ç–æ—Ç –∞–¥—Ä–µ—Å "—Å—Ç—É—á–∏—Ç—Å—è" Updater
      HTTP_AUTH_USER: thunderweb # –û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ
      HTTP_AUTH_PASS: thunderweb #
      EXCLUDE_PATTERNS: '**/.git*,package.json,package-lock.json,gulpfile.js,.editorconfig,node_modules/,.vscode/,.github/,.ecrc,.gitignore,.htmlhintrc,.stylelintrc.json,.stylelintignore,README.md,assets/src/,gulp/'

    steps:
      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16.x'

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Build project
        run: |
          npm ci
          npm run build

      - name: Deploy
        run: |
          set -eu
          mkdir -p "$HOME/.ssh"
          echo "${{ secrets.key }}" > "$HOME/.ssh/key"
          chmod 600 "$HOME/.ssh/key"

          # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ —Å–æ–∑–¥–∞–Ω–∏–µ –ø–∞–ø–∫–∏
          ssh -p 22 -i "$HOME/.ssh/key" -o StrictHostKeyChecking=no "$SSH_USER@$SSH_HOST" \
            "mkdir -p '$REMOTE_THEME_PATH'"

          rsync -e "ssh -p 22 -i $HOME/.ssh/key -o StrictHostKeyChecking=no" \
            --archive --compress --delete \
            --exclude="{$EXCLUDE_PATTERNS}" \
            ./ \
            "$SSH_USER@$SSH_HOST:$REMOTE_THEME_PATH/"

      - name: Trigger upgrade (HTTPS/HTTP fallback)
        run: |
          set +e

          # –ü—Ä–æ–±—É–µ–º HTTPS
          if curl -s -o /dev/null --max-time 10 \
             --user "$HTTP_AUTH_USER:$HTTP_AUTH_PASS" \
             "https://$REMOTE_SITE_URL?run_upgrade"; then
            echo "::notice::üü¢ Upgrade triggered via HTTPS"
            exit 0
          fi

          echo "::warning::üü° HTTPS failed, trying HTTP..."

          # –ü—Ä–æ–±—É–µ–º HTTP
          if curl -s -o /dev/null --max-time 10 \
             --user "$HTTP_AUTH_USER:$HTTP_AUTH_PASS" \
             "http://$REMOTE_SITE_URL?run_upgrade"; then
            echo "::notice::üü¢ Upgrade triggered via HTTP"
            exit 0
          fi

          echo "::error::üî¥ Both HTTPS and HTTP failed"
          exit 0
        continue-on-error: true
